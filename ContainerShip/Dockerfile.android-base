FROM circleci/android:api-26-node8-alpha

# set default build arguments
ARG ANDROID_TOOLS_VERSION=23.0.1
ARG ANDROID_SDK_BUILD_API_LEVEL=23
ARG ANDROID_SDK_TARGET_API_LEVEL=19
ARG BUCK_VERSION=v2018.02.16.01
ARG NDK_VERSION=10e
ARG NODE_VERSION=8.10.0
ARG WATCHMAN_VERSION=4.9.0

# set default environment variables
ENV ADB_INSTALL_TIMEOUT=10
ENV PATH=${PATH}:/opt/buck/bin/
ENV ANDROID_HOME=/opt/android
ENV ANDROID_SDK_HOME=${ANDROID_HOME}
ENV PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
ENV ANDROID_NDK=/opt/ndk/android-ndk-r$NDK_VERSION
ENV PATH=${PATH}:${ANDROID_NDK}

# install system dependencies
RUN sudo apt-get update -y && sudo apt-get install ant autoconf automake g++ gcc libqt5widgets5 lib32z1 lib32stdc++6 make maven python-dev python3-dev qml-module-qtquick-controls qtdeclarative5-dev file -y && sudo rm -rf /var/lib/apt

# RUN sudo apt-get update && sudo apt-get install ant autoconf automake curl g++ gcc git libqt5widgets5 lib32z1 lib32stdc++6 make maven npm openjdk-8* python-dev python3-dev qml-module-qtquick-controls qtdeclarative5-dev unzip -y
# curl? git? npm? openjdk? unzip?

RUN sudo mkdir /opt/ndk
RUN sudo chown ${USER:=$(/usr/bin/id -run)}:$USER /opt/ndk
WORKDIR /opt/ndk
RUN curl -fSL https://dl.google.com/android/repository/android-ndk-r$NDK_VERSION-linux-x86_64.zip -o ndk.zip && unzip -o -q ndk.zip && rm ndk.zip


# Add Android SDK tools
RUN sudo chown ${USER:=$(/usr/bin/id -run)}:$USER /opt/android
RUN echo "y" | sdkmanager "system-images;android-$ANDROID_SDK_TARGET_API_LEVEL;google_apis;armeabi-v7a"
RUN echo "y" | sdkmanager "platforms;android-$ANDROID_SDK_BUILD_API_LEVEL"
RUN echo "y" | sdkmanager "platforms;android-$ANDROID_SDK_TARGET_API_LEVEL"
RUN echo "y" | sdkmanager "build-tools;$ANDROID_TOOLS_VERSION"
RUN echo "y" | sdkmanager "add-ons;addon-google_apis-google-$ANDROID_SDK_BUILD_API_LEVEL"
RUN echo "y" | sdkmanager "extras;android;m2repository"

# Link adb executable
# RUN ln -s /opt/android/platform-tools/adb /usr/bin/adb

# Link avdmanager executable
# RUN ln -s /opt/android/tools/bin/avdmanager /usr/bin/avdmanager

# clean up unnecessary directories
RUN rm -rf /opt/android/system-images/android-$ANDROID_SDK_TARGET_API_LEVEL/default/x86

# download buck
RUN git clone https://github.com/facebook/buck.git ~/buck --branch $BUCK_VERSION --depth=1

# build buck
WORKDIR ~/buck
RUN ant
RUN buck --version